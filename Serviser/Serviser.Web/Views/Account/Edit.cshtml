@model Serviser.Web.Models.AccountEditViewModel

@{
    ViewBag.Title = "Edit";
}

@using (Html.BeginForm("Edit", "Account", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal container">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.UserId)
        <div class="form-group row  m-2">
            <div class="col-md-12 m-4 d-flex justify-content-center">

                @if (Model.ProfileImageUrl != null && !String.IsNullOrWhiteSpace(Model.ProfileImageUrl))
                {
                    <img src="@Url.Content(Model.ProfileImageUrl)" alt="Profile Image" style="max-width:300px;" class="card" />
                }
                else
                {
                    @:No Profile Image Set
                }
            </div>
            <label for="profileImage" class="control-label col-md-2">Profile Image</label>
            <div class="input-group col-md-10">
                <div class="custom-file">
                    <input type="file" class="custom-file-input" id="profileImage" name="profileImage"
                           aria-describedby="inputGroupFileAddon01">
                    <label class="custom-file-label" for="profileImage">Choose file</label>
                </div>
            </div>
            <script>
                $('#profileImage').on('change', function () {
                    //get the file name
                    var fileName = $(this).val();
                    //replace the "Choose a file" label
                    $(this).next('.custom-file-label').html(fileName);
                })
            </script>
        </div>
        <div class="form-group row m-2">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row m-2">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row m-2">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group row m-2">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        @* Cutomer Profile *@
        @if (Model.CustomerProfileId != null)
        {
            <h4>Customer Profile</h4>
            @Html.HiddenFor(model => model.CustomerProfileId)
        }


        @* Mechanic Profile *@
        @if (Model.MechanicProfileId != null)
        {
            <h4>Mechanic Profile</h4>
            @Html.HiddenFor(model => model.MechanicProfileId)

            <div class="form-group row m-2">
                @Html.LabelFor(model => model.CNIC, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CNIC, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CNIC, "", new { @class = "text-danger" })
                </div>
            </div>

        }
        <div class="form-group row m-2">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}
